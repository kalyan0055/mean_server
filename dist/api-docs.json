{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Nvipani Application",
      "description": "Nvipani Application APIs",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:8082",
    "basePath": "/api/v1",
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/user/userRegistration": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "token",
              "in": "header",
              "description": "Authorization Token to Create User"          
            },
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "type": "object",
                "properties": {            
                  "username": {
                    "type": "string",
                    "uniqueItems": true
                  },
                  "issendotp": {
                    "type": "boolean"
                  },
                  "issendemail": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "summary": "Send Otp to E-Mail for User Registraiton",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/Newuser"
              }
            }
          }
        }
      },
      "/user/verifypresignupotp": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Create new user in system",
          "parameters": [
            
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "type": "object",
                "properties": {            
                  "username": {
                    "type": "string",
                    "uniqueItems": true
                  },
                  "isverifyotp": {
                    "type": "boolean"
                  },
                  "otp": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "conf_password": {
                    "type": "string"
                  }

                }
              }
            }
          ],
          "summary": "Verify E-Mail Otp for User Registraiton",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/Newuser"
              }
            }
          }
        }
      },
      "/users/newuserslist/{userId}": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "find users associated with ID ",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get users associated with ID",
          "responses": {
            "200": {
              "description": "Users are found",
              "schema": {
                "$ref": "#/definitions/Newuser"
              }
            },
            "400": {
              "description": "NO Users is found",
              "schema": {
                "$ref": "#/definitions/Newuser"
              }
            }
          }
        }
      },
      "/users/deleteuser/{userId}": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Delet User by User ID ",
            "type": "string"
          }
        ],
       
        "delete": {
          "summary": "Delete user by User ID",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "User is deleted",
              "message": "User Successfully Deleted"
               
            }
          }
        }
       
      },
      "/users/update": {
        "put": {
          "summary": "Update user with give ID",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User with new values of properties",
              "schema": {
                "$ref": "#/definitions/Updateuser"
              }
            },
            {
              "name": "token",
              "in": "header",
              "description": "Authorization Token to Create User"          
            }
          ],
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/Updateuser"
              }
            }
          }
        }
      },
      "/users/disableOrEnableUser": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Disable OR Enable User",
          "parameters": [

            {
              "name": "user",
              "in": "body",
              "description": "User that we want to Enable/Disable",
              "schema": {
                "type": "object",
                "properties": {            
                  "id": {
                    "type": "string" 
                  },
                  "type":{
                    "type": "string",
                    "enum":["enable","disable"]
                  } 
                }
              }
            }
          ],
          "summary": "Disable OR Enable User",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "User is Enabled/Disabled",
              "schema": {
                "status":true,
                "message":"User is Successfully Enabled/Disabled"
              }
            }
          }
        }
      },
      "/users/resetPasswordRequest": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Send Password Reset link to User E-Mail",
          "parameters": [
            {
              "name": "token",
              "in": "header",
              "description": "Authorization Token Needed to reset Password"          
            },
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to Enable/Disable",
              "schema": {
                "type": "object",
                "properties": {            
                  "id": {
                    "type": "string" 
                  },
                  "username":{
                    "type": "string"
                  },
                  "reset_password":{
                    "type": "boolean",
                    "default":false
                  } 
                }
              }
            }
          ],
          "summary": "Send Password Reset link to User E-Mail",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "E-Mail has been sent to given email",
              "schema": {
                "status":true,
                "message":"An email has been sent with further instructions."
              }
            }
          }
        }
      },
      "/users/setPassword": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Set Password ",
          "parameters": [
            
            {
              "name": "user",
              "in": "body",
              "description": "Set new Pasword",
              "schema": {
                "type": "object",
                "properties": {            
                  "verifyPassword": {
                    "type": "string" 
                  },
                  "username":{
                    "type": "string"
                  },
                  "newPassword":{
                    "type": "string"
                  },
                  "otp":{
                    "type": "string"
                  }
                }
              }
            }
          ],
          "summary": "Set New Password to your E-Mail",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Password has been Successfuly Changed",
              "schema": {
                "status":true,
                "message":"Password has been Successfuly Changed."
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Newuser": {
        "required": [
          "email",
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          }
        }
      },
      "Updateuser": {
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "type": "string",
            "uniqueItems": true
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          } 
        }
      } 
    }
  }
  